{"ast":null,"code":"var _jsxFileName = \"/Users/santilaight/Desktop/dog-app-client/src/components/session/homeVeterinario.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect\n} = React;\n\nconst HomeVeterinario = () => {\n  _s();\n\n  let [info, setInfo] = useState({\n    nombre: \"\",\n    perros: [],\n    rol: true\n  });\n\n  const getUser = async () => {\n    let responseFromGet = await fetch(\"http://localhost:3000/veterinario\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        token: window.localStorage.token\n      }\n    }).then(response => response.json()).then(result => {\n      return result;\n    });\n    let rol = responseFromGet.rol;\n    let username = responseFromGet.nombre;\n    let perrosVet = responseFromGet.perros;\n    let perros = perrosVet.map(perro => {\n      let dogObject = {\n        id: perro._id,\n        nombre: perro.nombre,\n        raza: perro.raza\n      };\n      return dogObject;\n    });\n    let userInfo = {\n      nombre: username,\n      perros: perrosVet,\n      rol: rol\n    };\n    console.log(userInfo);\n    setInformation(userInfo);\n  };\n\n  const setInformation = information => {\n    setInfo({\n      nombre: information.nombre,\n      perros: information.perros,\n      rol: information.rol\n    });\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  if (info.usuario === \"\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  } else if (info.rol == false) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 40\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome \", info.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Tus perros son:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: info.perros.map(perro => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: perro.nombre\n              }, `perro-name-${perro.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: perro.raza\n              }, `perro-raza-${perro.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, `perro-container-${perro.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(HomeVeterinario, \"QFgwI0LcdJt+fwCrFv/MzkANaTY=\");\n\n_c = HomeVeterinario;\nexport default HomeVeterinario;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeVeterinario\");","map":{"version":3,"sources":["/Users/santilaight/Desktop/dog-app-client/src/components/session/homeVeterinario.js"],"names":["React","useState","useEffect","HomeVeterinario","info","setInfo","nombre","perros","rol","getUser","responseFromGet","fetch","method","headers","Accept","token","window","localStorage","then","response","json","result","username","perrosVet","map","perro","dogObject","id","_id","raza","userInfo","console","log","setInformation","information","usuario"],"mappings":"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","sourcesContent":["import React from \"react\";\nconst { useState, useEffect } = React;\n\nconst HomeVeterinario = () => {\n  let [info, setInfo] = useState({\n    nombre: \"\",\n    perros: [],\n    rol: true,\n  });\n\n  const getUser = async () => {\n    let responseFromGet = await fetch(\"http://localhost:3000/veterinario\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        token: window.localStorage.token,\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        return result;\n      });\n    let rol = responseFromGet.rol;\n    let username = responseFromGet.nombre;\n    let perrosVet = responseFromGet.perros;\n    let perros = perrosVet.map((perro) => {\n      let dogObject = {\n        id: perro._id,\n        nombre: perro.nombre,\n        raza: perro.raza,\n      };\n      return dogObject;\n    });\n  \n    let userInfo = {\n      nombre: username,\n      perros: perrosVet,\n      rol: rol,\n    };\n    console.log(userInfo)\n    setInformation(userInfo);\n  };\n\n  const setInformation = (information) => {\n    setInfo({\n      nombre: information.nombre,\n      perros: information.perros,\n      rol: information.rol\n    });\n\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  if (info.usuario === \"\") {\n    return <div>Cargando...</div>;\n  }else if(info.rol == false){ return (<h1></h1>)} \n  else {\n    return (\n      <div>\n        <p>Welcome {info.nombre}</p>\n        <h5>Tus perros son:</h5>\n        <table className=\"table table-striped table-dark\">\n          <tbody>\n            {info.perros.map((perro) => {\n              return (\n                <tr key={`perro-container-${perro.id}`}>\n                  <td key={`perro-name-${perro.id}`}>{perro.nombre}</td>\n                  <td key={`perro-raza-${perro.id}`}>{perro.raza}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n};\n\nexport default HomeVeterinario;\n"]},"metadata":{},"sourceType":"module"}